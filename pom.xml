<?xml version="1.0" encoding="UTF-8"?>
<!--SPDX-License-Identifier: MPL-2.0-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.dxfeed</groupId>
  <artifactId>graal-native-sdk</artifactId>
  <version>1.1.23-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <graalvm.version>24.0.1</graalvm.version>
    <native.image.path>${project.build.directory}/native-image</native.image.path>
    <native.image.name>libDxFeedGraalNativeSdk</native.image.name>
    <set-rpath.skip>true</set-rpath.skip>
    <maven.build.timestamp.format>yyyyMMdd-HHmmss</maven.build.timestamp.format>
    <arch.name>${os.arch}-${os.detected.name}</arch.name>
    <macIos>false</macIos>
    <notMacIos>true</notMacIos>
    <notIosSimulator>true</notIosSimulator>
    <!-- qd version and auther-api version must be compatible -->
    <auther-api.version>488</auther-api.version>
    <qd.version>3.333</qd.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.devexperts.qd</groupId>
      <artifactId>dxlink-websocket</artifactId>
      <version>${qd.version}</version>
    </dependency>
    <dependency>
      <groupId>com.devexperts.qd</groupId>
      <artifactId>dxfeed-ondemand</artifactId>
      <version>${qd.version}</version>
    </dependency>
    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <version>2.3.2</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.13.3</version>
    </dependency>
    <dependency>
      <groupId>org.graalvm.sdk</groupId>
      <artifactId>graal-sdk</artifactId>
      <version>${graalvm.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.graalvm.nativeimage</groupId>
      <artifactId>svm</artifactId>
      <version>${graalvm.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <organization>
    <name>Devexperts</name>
    <url>http://www.devexperts.com</url>
  </organization>

  <repositories>
    <repository>
      <id>jfrog</id>
      <url>https://dxfeed.jfrog.io/artifactory/maven-open/</url>
    </repository>
  </repositories>

  <ciManagement>
    <system>TeamCity</system>
    <url>https://dxcity.in.devexperts.com/buildConfiguration/Eugenics_DxfeedGraalNativeApi_Build</url>
  </ciManagement>

  <issueManagement>
    <system>JIRA</system>
    <url>https://jira.in.devexperts.com/browse/EN</url>
  </issueManagement>

  <scm>
    <connection>
      scm:git:https://stash.in.devexperts.com/scm/en/dxfeed-graal-native-sdk.git
    </connection>
    <tag>HEAD</tag>
    <url>https://stash.in.devexperts.com/scm/en/dxfeed-graal-native-sdk.git</url>
  </scm>

  <distributionManagement>
    <repository>
      <id>jfrog</id>
      <url>https://dxfeed.jfrog.io/artifactory/maven-open</url>
    </repository>
  </distributionManagement>

  <profiles>
    <profile>
      <id>mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <set-rpath.skip>false</set-rpath.skip>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.devexperts.mdd</groupId>
          <artifactId>auther-api</artifactId>
          <version>${auther-api.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>unix</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.devexperts.mdd</groupId>
          <artifactId>auther-api</artifactId>
          <version>${auther-api.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <native.image.name>DxFeedGraalNativeSdk</native.image.name>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.devexperts.mdd</groupId>
          <artifactId>auther-api</artifactId>
          <version>${auther-api.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>iosSimulator</id>
      <activation>
        <property>
          <name>macIosSimulator</name>
        </property>
      </activation>
      <properties>
        <set-rpath.skip>true</set-rpath.skip>
        <arch.name>ios-simulator</arch.name>
        <notIosSimulator>false</notIosSimulator>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.devexperts.mdd</groupId>
          <artifactId>auther-api</artifactId>
          <version>${auther-api.version}</version>
          <exclusions>
            <exclusion>
              <groupId>com.devexperts.qd</groupId>
              <artifactId>qds-monitoring</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>0.9.28</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>compile-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
            <configuration>
              <metadataRepository>
                <enabled>true</enabled>
              </metadataRepository>
              <skip>false</skip>
              <imageName>${native.image.name}</imageName>
              <sharedLibrary>true</sharedLibrary>
              <buildArgs>
                <buildArg>--enable-url-protocols=http,https</buildArg>
                <buildArg>-H:Name=${native.image.name}</buildArg>
                <buildArg>-Dproject.path=${project.basedir}</buildArg>
                <buildArg>-H:CLibraryPath=${project.basedir}/</buildArg>
                <buildArg>-H:Path=${native.image.path}</buildArg>
                <buildArg>--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core=ALL-UNNAMED</buildArg>
                <buildArg>--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.jni=ALL-UNNAMED</buildArg>
                <buildArg>--initialize-at-build-time=org.slf4j.helpers.NOPLoggerFactory,org.slf4j.helpers.SubstituteLoggerFactory,com.dxfeed.schedule.SessionType,com.dxfeed.api.DXEndpoint$Role,com.dxfeed.api.DXEndpoint$State,com.dxfeed.ipf.live.InstrumentProfileConnection$State,org.slf4j.LoggerFactory,sun.instrument.InstrumentationImpl,com.dxfeed.event.market.Scope,com.dxfeed.model.market.OrderBookModelFilter,com.dxfeed.schedule.SessionFilter,com.dxfeed.schedule.DayFilter</buildArg>
                <buildArg>--native-image-info</buildArg>
                <buildArg>-H:TempDirectory=${project.build.directory}/tmp_IOS</buildArg>
                <buildArg>-H:+ExitAfterRelocatableImageWrite</buildArg>
                <buildArg>-H:PageSize=16384</buildArg>
                <buildArg>-Dsvm.targetName=iOS</buildArg>
                <buildArg>-Dsvm.targetArch=x86_64</buildArg>
                <buildArg>-Dsvm.platform=org.graalvm.nativeimage.Platform$IOS_AMD64</buildArg>
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>ios</id>
      <activation>
        <property>
          <name>macIos</name>
        </property>
      </activation>
      <properties>
        <set-rpath.skip>true</set-rpath.skip>
        <arch.name>aarch64-ios</arch.name>
        <notMacIos>false</notMacIos>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.devexperts.mdd</groupId>
          <artifactId>auther-api</artifactId>
          <version>${auther-api.version}</version>
          <exclusions>
            <exclusion>
              <groupId>com.devexperts.qd</groupId>
              <artifactId>qds-monitoring</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>0.9.28</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>compile-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
            <configuration>
              <metadataRepository>
                <enabled>true</enabled>
              </metadataRepository>
              <skip>false</skip>
              <imageName>${native.image.name}</imageName>
              <buildArgs>
                <buildArg>--enable-url-protocols=http,https</buildArg>
                <buildArg>-H:Name=${native.image.name}</buildArg>
                <buildArg>-Dproject.path=${project.basedir}</buildArg>
                <buildArg>-H:CLibraryPath=${project.basedir}/</buildArg>
                <buildArg>-H:Path=${native.image.path}</buildArg>
                <buildArg>--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core=ALL-UNNAMED</buildArg>
                <buildArg>--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.jni=ALL-UNNAMED</buildArg>
                <buildArg>--initialize-at-build-time=org.slf4j.helpers.NOPLoggerFactory,org.slf4j.helpers.SubstituteLoggerFactory,com.dxfeed.schedule.SessionType,com.dxfeed.api.DXEndpoint$Role,com.dxfeed.api.DXEndpoint$State,com.dxfeed.ipf.live.InstrumentProfileConnection$State,org.slf4j.LoggerFactory,sun.instrument.InstrumentationImpl,com.dxfeed.event.market.Scope,com.dxfeed.model.market.OrderBookModelFilter,com.dxfeed.schedule.SessionFilter,com.dxfeed.schedule.DayFilter</buildArg>

                <buildArg>--native-image-info</buildArg>
                <buildArg>-H:TempDirectory=${project.build.directory}/tmp_IOS</buildArg>
                <buildArg>-H:+ExitAfterRelocatableImageWrite</buildArg>
                <buildArg>-H:PageSize=16384</buildArg>
                <buildArg>-Dsvm.targetName=iOS</buildArg>
                <buildArg>-Dsvm.targetArch=arm64</buildArg>
                <buildArg>-Dsvm.platform=org.graalvm.nativeimage.Platform$IOS_AARCH64</buildArg>
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.0</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <groupId>org.graalvm.buildtools</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <version>0.9.28</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>build-native</id>
            <goals>
              <goal>compile-no-fork</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
        <configuration>
          <metadataRepository>
            <enabled>true</enabled>
          </metadataRepository>
          <skip>false</skip>
          <imageName>${native.image.name}</imageName>
          <sharedLibrary>true</sharedLibrary>
          <buildArgs>
            <buildArg>--enable-url-protocols=http,https</buildArg>
            <buildArg>-H:Name=${native.image.name}</buildArg>
            <buildArg>-Dproject.path=${project.basedir}</buildArg>
            <buildArg>-H:CLibraryPath=${project.basedir}/</buildArg>
            <buildArg>-H:Path=${native.image.path}</buildArg>
            <buildArg>--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core=ALL-UNNAMED</buildArg>
            <buildArg>--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.jni=ALL-UNNAMED</buildArg>
            <buildArg>--initialize-at-build-time=org.slf4j.helpers.NOPLoggerFactory,org.slf4j.helpers.SubstituteLoggerFactory,com.dxfeed.schedule.SessionType,com.dxfeed.api.DXEndpoint$Role,com.dxfeed.api.DXEndpoint$State,com.dxfeed.ipf.live.InstrumentProfileConnection$State,org.slf4j.LoggerFactory,sun.instrument.InstrumentationImpl,com.dxfeed.event.market.Scope,com.dxfeed.model.market.OrderBookModelFilter,com.dxfeed.schedule.SessionFilter,com.dxfeed.schedule.DayFilter</buildArg>
          </buildArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <id>set-rpath</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <skip>${set-rpath.skip}</skip>
              <executable>install_name_tool</executable>
              <arguments>
                <argument>-id</argument>
                <argument>@rpath/${native.image.name}.dylib</argument>
                <argument>
                  ${native.image.path}/${native.image.name}.dylib
                </argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>copy-ios-lib</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <skip>${notMacIos}</skip>
              <target>
                <copy todir="${project.build.directory}/arm64">
                  <fileset dir="${project.build.directory}/tmp_IOS">
                    <include name="**/*.o" />
                  </fileset>
                  <mapper type="flatten" />
                </copy>
                <copy todir="${native.image.path}">
                  <fileset dir="${project.build.directory}/tmp_IOS">
                    <include name="**/*.o" />
                  </fileset>
                  <mapper type="flatten" />
                </copy>
                <copy todir="${native.image.path}">
                  <fileset dir="${project.basedir}/jre-ios">
                    <include name="**/*-arm64-ios-r.a" />
                  </fileset>
                  <mapper type="flatten" />
                </copy>
                <delete failonerror="false">
                  <fileset dir="${project.build.directory}/tmp_IOS">
                    <include name="**/*.o" />
                  </fileset>
                </delete>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>copy-ios-simulator-lib</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <skip>${notIosSimulator}</skip>
              <target>
                <copy todir="${project.build.directory}/amd64">
                  <fileset dir="${project.build.directory}/tmp_IOS">
                    <include name="**/*.o" />
                  </fileset>
                  <mapper type="flatten" />
                </copy>
                <copy todir="${native.image.path}">
                  <fileset dir="${project.basedir}/jre-ios">
                    <include name="**/*-ios-simulator-r.a" />
                  </fileset>
                  <mapper type="flatten" />
                </copy>
                <delete failonerror="false">
                  <fileset dir="${native.image.path}">
                    <include name="**/*-arm64-ios-r.a" />
                  </fileset>
                </delete>
                <exec executable="lipo" failonerror="true">
                  <arg value="-create" />
                  <arg value="${project.build.directory}/arm64/libDxFeedGraalNativeSdk.o" />
                  <arg value="${project.build.directory}/amd64/libDxFeedGraalNativeSdk.o" />
                  <arg value="-output" />
                  <arg value="${native.image.path}/libDxFeedGraalNativeSdk.o" />
                </exec>
                <delete failonerror="false">
                  <fileset dir="${project.build.directory}">
                    <include name="**/*aarch64-ios.zip" />
                  </fileset>
                </delete>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.4.2</version>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <finalName>${project.name}</finalName>
              <descriptors>
                <descriptor>src/assembly/assembly.xml</descriptor>
              </descriptors>
              <archive>
                <manifest>
                  <addClasspath>true</addClasspath>
                </manifest>
              </archive>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <!-- Create version file -->
            <configuration>
              <target>
                <echo file="${project.build.directory}/docs/${project.name}-version.inc" message="build.number=${project.version}-${maven.build.timestamp}" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
            <id>create-version-file</id>
            <phase>prepare-package</phase>
          </execution>
          <execution>
            <id>install-artifact-file</id>
            <phase>install</phase>
            <configuration>
              <target>
                <delete failonerror="false">
                  <fileset dir="${project.build.directory}" includes="${project.name}-${project.version}.jar" />
                </delete>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.0.0-M7</version>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <scmShallowClone>false</scmShallowClone> <!--it should use git to create a change log (see git-changelog-maven-plugin)-->
        </configuration>
      </plugin>
      <plugin>
        <groupId>se.bjurr.gitchangelog</groupId>
        <artifactId>git-changelog-maven-plugin</artifactId>
        <version>1.95.4</version>
        <configuration>
          <file>${project.build.directory}/docs/changelog.txt</file>
          <ignoreCommitsIfMessageMatches>^\[maven-release-plugin\].*</ignoreCommitsIfMessageMatches>
          <ignoreCommitsOlderThan>2022-12-12 23:59:59</ignoreCommitsOlderThan>
          <templateContent>
            <![CDATA[
# Changelog
{{#tags}}
## {{name}}
  {{#commits}}
    * {{{message}}}
  {{/commits}}
{{/tags}}
]]>
          </templateContent>
        </configuration>
        <executions>
          <execution>
            <id>GenerateGitChangelog</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>git-changelog</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
